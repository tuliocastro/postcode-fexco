!function(){window.CONSTANTS={APP:"app",EMPTY_TEMPLATE:"<ui-view />"},angular.module(CONSTANTS.APP,["ui.router","LocalStorageModule","sticky","angular-growl"]),angular.module(CONSTANTS.APP).config(["$urlRouterProvider","$httpProvider","growlProvider",function($urlRouterProvider,$httpProvider,growlProvider){$urlRouterProvider.otherwise("configuration"),$httpProvider.interceptors.push("HttpExceptionInterceptor"),growlProvider.globalTimeToLive(5e3)}]),angular.module(CONSTANTS.APP).run(["$rootScope","$state","GlobalConstants","$transitions","APIKeySession",function($rootScope,$state,GlobalConstants,$transitions,APIKeySession){$rootScope.constants=GlobalConstants,$transitions.onBefore({to:"postcoder.**"},function(trans){if(!APIKeySession.get())return $state.target("configuration")})}])}(),function(){angular.module(CONSTANTS.APP).constant("GlobalConstants",{API_BASE_ENDPOINT:"http://localhost:8080",REQUEST_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",EMPTY_TEMPLATE:"<div ui-view />",APP_NAME:"Postcoder - front consumer"})}(),function(){angular.module(CONSTANTS.APP).constant("ServicesLookups",{list:[{name:" "},{name:" Irish Address and Coordinate"},{name:" Irish Coordinate"},{name:" Irish Reverse geocode coordinates"},{name:" UK Address"}]})}(),function(){function Controller($state,APIKeySession){function save(){APIKeySession.store(ctrl.apiKey),$state.go(INITIAL_ROUTE)}function reset(){delete ctrl.apiKey}const INITIAL_ROUTE="postcoder.api";var ctrl=this;ctrl.apiKey=APIKeySession.get()||"",ctrl.save=save,ctrl.reset=reset}Controller.$inject=["$state","APIKeySession"],angular.module(CONSTANTS.APP).controller("ConfigurationCtrl",Controller)}(),function(){function Controller($window,_lookups){function filter(){reset(),findAddresses()}function reset(){ctrl.params.page=0}function nextPage(){ctrl.params.page+=1,findAddresses()}function previousPage(){ctrl.params.page-=1,findAddresses()}function findAddresses(){$window.scrollTo(0,0),delete ctrl.addresses,ctrl.selectedLookup.execute(ctrl.params).then(function(res){console.log(res),ctrl.addresses=res.data,setPagination()},function(err){})}function setPagination(){delete ctrl.pagination;var lastResult=ctrl.addresses.last()||{};lastResult&&lastResult.morevalues&&(ctrl.pagination={morevalues:lastResult.morevalues,nextpage:lastResult.nextPage,totalresults:lastResult.totalresults},delete lastResult.morevalues,delete lastResult.nextpage,delete lastResult.totalresults)}var ctrl=this;ctrl.lookups=_lookups,ctrl.selectedLookup=null,ctrl.params={page:0,lines:null,distance:null,format:"json"},ctrl.addresses=null,ctrl.pagination=null,ctrl.filter=filter,ctrl.nextPage=nextPage,ctrl.previousPage=previousPage,ctrl.reset=reset}Controller.$inject=["$window","_lookups"],angular.module(CONSTANTS.APP).controller("PostcoderAPICtrl",Controller)}(),function(){function Factory($q,$injector){return{responseError:function(response){var data=response.data;return 200!==response.status&&data&&data.message&&(console.log("show growl"),$injector.get("growl").error(data.message)),$q.reject(response)}}}Factory.$inject=["$q","$injector"],angular.module(CONSTANTS.APP).factory("HttpExceptionInterceptor",Factory)}(),function(){function Factory(GlobalConstants,$http,$httpParamSerializerJQLike){function buildURL(url){return GlobalConstants.API_BASE_ENDPOINT+"/"+url}var DEFAULT_OPTS={loading:!0};return{engine:function(opts){var promise=$http({data:opts.data,method:opts.method,headers:opts.headers,url:buildURL(opts.url),params:opts.params,transformRequest:opts.transformRequest});return opts.loading,promise},upload:function(opts){var _opts=angular.extend({method:"POST",headers:{"Content-Type":void 0},transformRequest:null},DEFAULT_OPTS,opts);return this.engine(_opts)},get:function(opts){var _opts=angular.extend({method:"GET",transformRequest:null},DEFAULT_OPTS,opts);return this.engine(_opts)},post:function(opts){var _opts=angular.extend({method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded;charset=utf-8"},transformRequest:$httpParamSerializerJQLike},DEFAULT_OPTS,opts);return this.engine(_opts)},put:function(opts){var _opts=angular.extend({method:"PUT",headers:{"Content-Type":"application/x-www-form-urlencoded;charset=utf-8"},transformRequest:$httpParamSerializerJQLike},DEFAULT_OPTS,opts);return this.engine(_opts)},delete:function(opts){var _opts=angular.extend({method:"DELETE",headers:{"Content-Type":"application/x-www-form-urlencoded;charset=utf-8"},transformRequest:$httpParamSerializerJQLike},DEFAULT_OPTS,opts);return this.engine(_opts)}}}Factory.$inject=["GlobalConstants","$http","$httpParamSerializerJQLike"],angular.module(CONSTANTS.APP).factory("API",Factory)}(),function(){function Factory(IEService,UKService){var instances=[{name:"Irish Address",fields:[{label:"Eircode / Address Fragment",value:"",required:!0,grid:"col-xs-12"}],execute:function(params){var query=this.fields[0].value;return IEService.findAddress(query,params)}},{name:"Irish Address and Coordinate",fields:[{label:"Eircode / Address Fragment",value:"",required:!0,grid:"col-xs-12"}],execute:function(params){var query=this.fields[0].value;return IEService.findAddressGeo(query,params)}},{name:"Irish Coordinate",fields:[{label:"Eircode",value:"",required:!0,grid:"col-xs-12"}],execute:function(params){var query=this.fields[0].value;return IEService.findPosition(query,params)}},{name:"Irish Reverse geocode coordinates",fields:[{label:"Latitude",value:"",required:!0,grid:"col-xs-6"},{label:"Longitude",value:"",required:!1,grid:"col-xs-6"}],execute:function(params){var latitude=this.fields[0].value,longitude=this.fields[1].value;return IEService.findReverseGeo(latitude,longitude,params)}},{name:"UK Address",fields:[{label:"Postcode / Address Fragment",value:"",required:!0,grid:"col-xs-12"}],execute:function(params){var query=this.fields[0].value;return UKService.findAddress(query,params)}}];return{list:function(){return instances}}}Factory.$inject=["IEService","UKService"],angular.module(CONSTANTS.APP).factory("LookupServiceExecutor",Factory)}(),function(){function Routes($stateProvider){$stateProvider.state({name:"configuration",url:"/configuration",templateUrl:"configuration.html",controller:"ConfigurationCtrl as ctrl"})}Routes.$inject=["$stateProvider"],angular.module(CONSTANTS.APP).config(Routes)}(),function(){function Routes($stateProvider){$stateProvider.state({name:"postcoder",url:"/postcoder",template:CONSTANTS.EMPTY_TEMPLATE,abstract:!0}).state({name:"postcoder.api",url:"/api",templateUrl:"postcoder/api.html",controller:"PostcoderAPICtrl as ctrl",resolve:{_lookups:["LookupServiceExecutor",function(LookupServiceExecutor){return LookupServiceExecutor.list()}]}})}Routes.$inject=["$stateProvider"],angular.module(CONSTANTS.APP).config(Routes)}(),function(){function Service(API,APIKeySession){return{findAddress:function(query,params){return API.get({params:params,url:APIKeySession.get()+"/address/ie/"+query})},findAddressGeo:function(query,params){return API.get({params:params,url:APIKeySession.get()+"/addressgeo/ie/"+query})},findPosition:function(query,params){return API.get({params:params,url:APIKeySession.get()+"/position/ie/"+query})},findReverseGeo:function(latitude,longitude,params){return console.log("finding reverse geo"),API.get({params:params,url:APIKeySession.get()+"/rgeo/ie/"+latitude+"/"+longitude})}}}Service.$inject=["API","APIKeySession"],angular.module(CONSTANTS.APP).service("IEService",Service)}(),function(){function Service(API,APIKeySession){return{findAddress:function(query,params){return API.get({params:params,url:APIKeySession.get()+"/address/uk/"+query})}}}Service.$inject=["API","APIKeySession"],angular.module(CONSTANTS.APP).service("UKService",Service)}(),Array.prototype.last||(Array.prototype.last=function(){return this[this.length-1]}),Array.prototype.remove||(Array.prototype.remove=function(o){var index=this.indexOf(o);index>=0&&this.splice(index,1)}),function(){function Factory(localStorageService){return{store:function(data){var btoed=btoa(data);localStorageService.set("___POSTPCWKEY",btoed)},get:function(){var btoed=localStorageService.get("___POSTPCWKEY");return btoed?atob(btoed):null},clear:function(){localStorageService.remove("___POSTPCWKEY")}}}Factory.$inject=["localStorageService"],angular.module(CONSTANTS.APP).factory("APIKeySession",Factory)}();
//# sourceMappingURL=postcoder.assets.min.js.map
